Navigation:- http://nzee-wifi.blogspot.in/2013/01/line-following-robot-using-camera-basic.html

- get the two ends of the line
- identify the points on the top and bottom(y co-ordinates)
- observe whose x coordinate is greater -the top one or the bottom one

Important :-
	- first run LineCalibrate to get the all params 
	- then run the main cpp which returns the final angle and rho

New algo for Detection (callibration):-
	- apply the filters(contrast stretching, smoothing(4 types) etc, opening, closing) - Apply callback wherever possible and 		  necessary
	- use canny (callback)
	- use probabalistic houghline transform to detect lines
	- callback - canny, houghtransform
	- device some way to reduce the no of lines to only two and draw the center line as a binary image (draw center line only when 		  both sides have one line each)
	- use simple houghline transform on the prev image and get the angles and the rho of line(main cpp)

documentation of the prev code(FAULTY) :-
	- applies contrast stretching,converts to hsv, smooths the image
	- callback :- thresholding, opening, closing twice, canny
	- trackbars:- hsv ranges, canny thresholds :(NO TRACKBAR FOR HOUGHLINE TRANSFORM PARAMETERS)
	- dilation (??)
	- converting to rgb format again
	- Probabalistic Hough line transform with fixed params (??)
	- drawing the detected lines on the rgb image(drawing all of them ??)
	- DOUBTFUL calculations to get the angle from the endpoints
